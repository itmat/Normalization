.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Net::OpenSSH::ShellQuoter::MSCmd 3"
.TH Net::OpenSSH::ShellQuoter::MSCmd 3 "2015-07-13" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::OpenSSH::ShellQuoter::MSCmd \- Quoter for Windows cmd.exe
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This quoter is intended for interaction with \s-1SSH\s0 servers running on
Windows which invoke the requested commands through the \f(CW\*(C`cmd.exe\*(C'\fR shell.
.PP
Because of \f(CW\*(C`cmd.exe\*(C'\fR not doing wildcard expansion (on Windows this
task is left to the final command), glob quoting just quotes
everything.
.PP
Some Windows servers use \f(CW\*(C`Win32::CreateProcess\*(C'\fR to run the \f(CW\*(C`cmd.exe\*(C'\fR
shell which runs the requested command. In that case, both the \f(CW\*(C`MSCmd\*(C'\fR
and \f(CW\*(C`MSWin\*(C'\fR quoters have to be chained (and \s-1BTW\s0, order matters):
.PP
.Vb 2
\&   $ssh = Net::OpenSSH\->new(...,
\&                            remote_shell => \*(AqMSCmd,MSWin\*(Aq);
.Ve
.PP
Actually, \f(CW\*(C`cmd.exe\*(C'\fR may require not quoting at all when the requested
command is a builtin (for instance, \f(CW\*(C`echo\*(C'\fR).
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2008\-2014 by Salvador Fandi√±o
(sfandino@yahoo.com)
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.10.0 or,
at your option, any later version of Perl 5 you may have available.
